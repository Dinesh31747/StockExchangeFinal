{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USHA\\\\OneDrive\\\\Desktop\\\\login-main\\\\client\\\\src\\\\components\\\\Stocks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { AppBar, Box, Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Snackbar, Alert } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport NavAfter from './NavAfterLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  color: theme.palette.mode === 'dark' ? theme.palette.grey.contrastText : theme.palette.text.primary,\n  fontWeight: 'bold',\n  fontSize: 14,\n  borderBottom: 'none'\n}));\n_c = StyledTableCell;\nconst Stocks = () => {\n  _s();\n  const [data, setData] = useState({\n    top_gainers: [],\n    stocks_in_loss: [],\n    most_bought: []\n  });\n  const [cart, setCart] = useState([]); // State to store selected stocks\n  const [openSnackbar, setOpenSnackbar] = useState(false); // Snackbar state\n\n  const [totalStocks, setTotalStocks] = useState(0);\n  useEffect(() => {\n    // no\n    const storedStocks = localStorage.getItem('stock');\n\n    // Check if data exists and parse it (if not, initialize as an empty array)\n    let cartFromStorage = [];\n    if (storedStocks) {\n      cartFromStorage = JSON.parse(storedStocks);\n    }\n    // no \n    const intervalId = setInterval(fetchData, 10000); // Fetch every 10 seconds\n\n    async function fetchData() {\n      try {\n        const response = await axios.get(\"https://www.alphavantage.co/query?function=TOP_GAINERS_LOSERS&apikey=demo\");\n        setData({\n          top_gainers: response.data.top_gainers || [],\n          stocks_in_loss: response.data.top_losers || [],\n          most_bought: response.data.most_bought || []\n        });\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n    fetchData(); // Initial fetch\n    // Set total stocks based on retrieved or empty data\n    setTotalStocks(cartFromStorage.length);\n    // \n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n\n  // const handleAddToCart = (stock) => {\n  //   setCart([...cart, stock]); // Add stock to cart state\n  //   setOpenSnackbar(true); // Open snackbar on adding to cart\n  //   localStorage.setItem('stock',JSON.stringify(cart))\n  // };\n  // console.log(localStorage.getItem('stock'))\n\n  // const handleAddToCart = (stock) => {\n  //   setCart([...cart, stock]); // Add stock to cart state\n  //   setOpenSnackbar(true); // Open snackbar on adding to cart\n\n  //   // Retrieve data from local storage (assuming the key is 'stock')\n  //   const storedStocks = localStorage.getItem('stock');\n\n  //   // Check if data exists and parse it (if not, initialize as an empty array)\n  //   let cartFromStorage = [];\n  //   if (storedStocks) {\n  //     cartFromStorage = JSON.parse(storedStocks);\n  //   }\n\n  //   // Update cart state with combined data (existing + new stock)\n  //   setCart([...cartFromStorage, stock]);\n\n  //   // Save the updated cart to local storage\n  //   localStorage.setItem('stock', JSON.stringify(cart));\n  // };\n\n  const handleAddToCart = stock => {\n    const {\n      ticker,\n      price,\n      change_percentage\n    } = stock; // Destructure properties from stock object\n    const newStock = {\n      ticker,\n      price,\n      change_percentage\n    }; // Create a new object with required properties\n    setCart([...cart, newStock]); // Add newStock to cart state\n    setOpenSnackbar(true); // Open snackbar on adding to cart\n\n    // Retrieve and update cart from local storage\n    const storedStocks = localStorage.getItem('stock');\n    let cartFromStorage = [];\n    if (storedStocks) {\n      cartFromStorage = JSON.parse(storedStocks);\n    }\n    setCart([...cartFromStorage, newStock]);\n    localStorage.setItem('stock', JSON.stringify(cart));\n  };\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      backgroundColor: 'background.default'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(NavAfter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        sx: {\n          color: 'text.primary'\n        },\n        children: \"View Your Stocks (Real-time)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mt: 4,\n          backgroundColor: 'background.paper'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            '& thead th': {\n              backgroundColor: 'background.default',\n              color: 'text.primary'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Ticker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Change (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: data.top_gainers.map((stock, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: stock.ticker\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: stock.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: stock.change_percentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  onClick: () => handleAddToCart(stock),\n                  children: \"Add to Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        children: [\"Total Stocks in Cart: \", totalStocks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 2000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Added to cart!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Stocks, \"sSxXmS5RPCeX5H+rUtbk/NE+Pls=\");\n_c2 = Stocks;\nexport default Stocks;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"Stocks\");","map":{"version":3,"names":["React","useEffect","useState","axios","AppBar","Box","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Snackbar","Alert","styled","NavAfter","jsxDEV","_jsxDEV","StyledTableCell","theme","color","palette","mode","grey","contrastText","text","primary","fontWeight","fontSize","borderBottom","_c","Stocks","_s","data","setData","top_gainers","stocks_in_loss","most_bought","cart","setCart","openSnackbar","setOpenSnackbar","totalStocks","setTotalStocks","storedStocks","localStorage","getItem","cartFromStorage","JSON","parse","intervalId","setInterval","fetchData","response","get","top_losers","err","console","error","message","length","clearInterval","handleAddToCart","stock","ticker","price","change_percentage","newStock","setItem","stringify","handleSnackbarClose","sx","display","flexDirection","minHeight","backgroundColor","children","position","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mt","mb","variant","component","map","index","scope","size","onClick","open","autoHideDuration","onClose","severity","width","_c2","$RefreshReg$"],"sources":["C:/Users/USHA/OneDrive/Desktop/login-main/client/src/components/Stocks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { AppBar, Box, Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Snackbar, Alert } from '@mui/material';\n\nimport { styled } from '@mui/material/styles';\nimport NavAfter from './NavAfterLogin';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  color: theme.palette.mode === 'dark' ? theme.palette.grey.contrastText : theme.palette.text.primary,\n  fontWeight: 'bold',\n  fontSize: 14,\n  borderBottom: 'none',\n}));\n\nconst Stocks=()=> {\n  const [data, setData] = useState({\n    top_gainers: [],\n    stocks_in_loss: [],\n    most_bought: [],\n  });\n  const [cart, setCart] = useState([]); // State to store selected stocks\n  const [openSnackbar, setOpenSnackbar] = useState(false); // Snackbar state\n\n\n  const [totalStocks, setTotalStocks] = useState(0);\n\n\n  useEffect(() => {\n\n// no\n    const storedStocks = localStorage.getItem('stock');\n\n    // Check if data exists and parse it (if not, initialize as an empty array)\n    let cartFromStorage = [];\n    if (storedStocks) {\n      cartFromStorage = JSON.parse(storedStocks);\n    }\n      // no \n    const intervalId = setInterval(fetchData, 10000); // Fetch every 10 seconds\n\n    async function fetchData() {\n      try {\n        const response = await axios.get(\"https://www.alphavantage.co/query?function=TOP_GAINERS_LOSERS&apikey=demo\");\n        setData({\n          top_gainers: response.data.top_gainers || [],\n          stocks_in_loss: response.data.top_losers || [],\n          most_bought: response.data.most_bought || [],\n        });\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n\n    fetchData(); // Initial fetch\n    // Set total stocks based on retrieved or empty data\n    setTotalStocks(cartFromStorage.length);\n// \n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n\n  // const handleAddToCart = (stock) => {\n  //   setCart([...cart, stock]); // Add stock to cart state\n  //   setOpenSnackbar(true); // Open snackbar on adding to cart\n  //   localStorage.setItem('stock',JSON.stringify(cart))\n  // };\n  // console.log(localStorage.getItem('stock'))\n\n  // const handleAddToCart = (stock) => {\n  //   setCart([...cart, stock]); // Add stock to cart state\n  //   setOpenSnackbar(true); // Open snackbar on adding to cart\n  \n  //   // Retrieve data from local storage (assuming the key is 'stock')\n  //   const storedStocks = localStorage.getItem('stock');\n  \n  //   // Check if data exists and parse it (if not, initialize as an empty array)\n  //   let cartFromStorage = [];\n  //   if (storedStocks) {\n  //     cartFromStorage = JSON.parse(storedStocks);\n  //   }\n  \n  //   // Update cart state with combined data (existing + new stock)\n  //   setCart([...cartFromStorage, stock]);\n  \n  //   // Save the updated cart to local storage\n  //   localStorage.setItem('stock', JSON.stringify(cart));\n  // };\n\n  \n  const handleAddToCart = (stock) => {\n    const { ticker, price, change_percentage } = stock; // Destructure properties from stock object\n    const newStock = { ticker, price, change_percentage }; // Create a new object with required properties\n    setCart([...cart, newStock]); // Add newStock to cart state\n    setOpenSnackbar(true); // Open snackbar on adding to cart\n  \n    // Retrieve and update cart from local storage\n    const storedStocks = localStorage.getItem('stock');\n    let cartFromStorage = [];\n    if (storedStocks) {\n      cartFromStorage = JSON.parse(storedStocks);\n    }\n    setCart([...cartFromStorage, newStock]);\n    localStorage.setItem('stock', JSON.stringify(cart));\n  };\n  \n\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh', backgroundColor: 'background.default' }}>\n      <AppBar position=\"static\" color=\"primary\">\n        <NavAfter />\n      </AppBar>\n      <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" sx={{ color: 'text.primary' }}>\n          View Your Stocks (Real-time)\n        </Typography>\n        <TableContainer component={Paper} sx={{ mt: 4, backgroundColor: 'background.paper' }}>\n          <Table sx={{ '& thead th': { backgroundColor: 'background.default', color: 'text.primary' } }}>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Ticker</StyledTableCell>\n                <StyledTableCell>Price</StyledTableCell>\n                <StyledTableCell>Change (%)</StyledTableCell>\n                <StyledTableCell>Action</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.top_gainers.map((stock, index) => (\n                <TableRow key={index}>\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {stock.ticker}\n                  </StyledTableCell>\n                  <StyledTableCell>{stock.price}</StyledTableCell>\n                  <StyledTableCell>{stock.change_percentage}</StyledTableCell>\n                  <StyledTableCell>\n                    <Button variant=\"contained\" size=\"small\" onClick={() => handleAddToCart(stock)}>\n                      Add to Cart\n                    </Button>\n                  </StyledTableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Typography variant=\"h6\" component=\"h6\">\n    Total Stocks in Cart: {totalStocks}\n  </Typography>\n      </Container>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={2000}\n        onClose={handleSnackbarClose}\n      >\n        <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n          Added to cart!\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\nexport default Stocks;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAEpK,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGJ,MAAM,CAACR,SAAS,CAAC,CAAC,CAAC;EAAEa;AAAM,CAAC,MAAM;EACxDC,KAAK,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAGH,KAAK,CAACE,OAAO,CAACE,IAAI,CAACC,YAAY,GAAGL,KAAK,CAACE,OAAO,CAACI,IAAI,CAACC,OAAO;EACnGC,UAAU,EAAE,MAAM;EAClBC,QAAQ,EAAE,EAAE;EACZC,YAAY,EAAE;AAChB,CAAC,CAAC,CAAC;AAACC,EAAA,GALEZ,eAAe;AAOrB,MAAMa,MAAM,GAACA,CAAA,KAAK;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC;IAC/BqC,WAAW,EAAE,EAAE;IACfC,cAAc,EAAE,EAAE;IAClBC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAGzD,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,CAAC,CAAC;EAGjDD,SAAS,CAAC,MAAM;IAElB;IACI,MAAM+C,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAElD;IACA,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIH,YAAY,EAAE;MAChBG,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;IAC5C;IACE;IACF,MAAMM,UAAU,GAAGC,WAAW,CAACC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;;IAElD,eAAeA,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtD,KAAK,CAACuD,GAAG,CAAC,2EAA2E,CAAC;QAC7GpB,OAAO,CAAC;UACNC,WAAW,EAAEkB,QAAQ,CAACpB,IAAI,CAACE,WAAW,IAAI,EAAE;UAC5CC,cAAc,EAAEiB,QAAQ,CAACpB,IAAI,CAACsB,UAAU,IAAI,EAAE;UAC9ClB,WAAW,EAAEgB,QAAQ,CAACpB,IAAI,CAACI,WAAW,IAAI;QAC5C,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOmB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;MAC5B;IACF;IAEAP,SAAS,CAAC,CAAC,CAAC,CAAC;IACb;IACAT,cAAc,CAACI,eAAe,CAACa,MAAM,CAAC;IAC1C;IACI,OAAO,MAAMC,aAAa,CAACX,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAGA,MAAMY,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAM;MAAEC,MAAM;MAAEC,KAAK;MAAEC;IAAkB,CAAC,GAAGH,KAAK,CAAC,CAAC;IACpD,MAAMI,QAAQ,GAAG;MAAEH,MAAM;MAAEC,KAAK;MAAEC;IAAkB,CAAC,CAAC,CAAC;IACvD3B,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE6B,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9B1B,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMG,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAClD,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIH,YAAY,EAAE;MAChBG,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;IAC5C;IACAL,OAAO,CAAC,CAAC,GAAGQ,eAAe,EAAEoB,QAAQ,CAAC,CAAC;IACvCtB,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAEpB,IAAI,CAACqB,SAAS,CAAC/B,IAAI,CAAC,CAAC;EACrD,CAAC;EAID,MAAMgC,mBAAmB,GAAGA,CAAA,KAAM;IAChC7B,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACExB,OAAA,CAAChB,GAAG;IAACsE,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,SAAS,EAAE,OAAO;MAAEC,eAAe,EAAE;IAAqB,CAAE;IAAAC,QAAA,gBAC/G3D,OAAA,CAACjB,MAAM;MAAC6E,QAAQ,EAAC,QAAQ;MAACzD,KAAK,EAAC,SAAS;MAAAwD,QAAA,eACvC3D,OAAA,CAACF,QAAQ;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACThE,OAAA,CAACf,SAAS;MAACgF,QAAQ,EAAC,IAAI;MAACX,EAAE,EAAE;QAAEY,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAR,QAAA,gBAC5C3D,OAAA,CAACd,UAAU;QAACkF,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAACf,EAAE,EAAE;UAAEnD,KAAK,EAAE;QAAe,CAAE;QAAAwD,QAAA,EAAC;MAEvE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbhE,OAAA,CAACV,cAAc;QAAC+E,SAAS,EAAE5E,KAAM;QAAC6D,EAAE,EAAE;UAAEY,EAAE,EAAE,CAAC;UAAER,eAAe,EAAE;QAAmB,CAAE;QAAAC,QAAA,eACnF3D,OAAA,CAACb,KAAK;UAACmE,EAAE,EAAE;YAAE,YAAY,EAAE;cAAEI,eAAe,EAAE,oBAAoB;cAAEvD,KAAK,EAAE;YAAe;UAAE,CAAE;UAAAwD,QAAA,gBAC5F3D,OAAA,CAACT,SAAS;YAAAoE,QAAA,eACR3D,OAAA,CAACR,QAAQ;cAAAmE,QAAA,gBACP3D,OAAA,CAACC,eAAe;gBAAA0D,QAAA,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiB,CAAC,eACzChE,OAAA,CAACC,eAAe;gBAAA0D,QAAA,EAAC;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiB,CAAC,eACxChE,OAAA,CAACC,eAAe;gBAAA0D,QAAA,EAAC;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiB,CAAC,eAC7ChE,OAAA,CAACC,eAAe;gBAAA0D,QAAA,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZhE,OAAA,CAACZ,SAAS;YAAAuE,QAAA,EACP3C,IAAI,CAACE,WAAW,CAACoD,GAAG,CAAC,CAACxB,KAAK,EAAEyB,KAAK,kBACjCvE,OAAA,CAACR,QAAQ;cAAAmE,QAAA,gBACP3D,OAAA,CAACC,eAAe;gBAACoE,SAAS,EAAC,IAAI;gBAACG,KAAK,EAAC,KAAK;gBAAAb,QAAA,EACxCb,KAAK,CAACC;cAAM;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAClBhE,OAAA,CAACC,eAAe;gBAAA0D,QAAA,EAAEb,KAAK,CAACE;cAAK;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkB,CAAC,eAChDhE,OAAA,CAACC,eAAe;gBAAA0D,QAAA,EAAEb,KAAK,CAACG;cAAiB;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAkB,CAAC,eAC5DhE,OAAA,CAACC,eAAe;gBAAA0D,QAAA,eACd3D,OAAA,CAACN,MAAM;kBAAC0E,OAAO,EAAC,WAAW;kBAACK,IAAI,EAAC,OAAO;kBAACC,OAAO,EAAEA,CAAA,KAAM7B,eAAe,CAACC,KAAK,CAAE;kBAAAa,QAAA,EAAC;gBAEhF;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC;YAAA,GAVLO,KAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWV,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eACjBhE,OAAA,CAACd,UAAU;QAACkF,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAAAV,QAAA,GAAC,wBACtB,EAAClC,WAAW;MAAA;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACZhE,OAAA,CAACL,QAAQ;MACPgF,IAAI,EAAEpD,YAAa;MACnBqD,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAExB,mBAAoB;MAAAM,QAAA,eAE7B3D,OAAA,CAACJ,KAAK;QAACiF,OAAO,EAAExB,mBAAoB;QAACyB,QAAQ,EAAC,SAAS;QAACxB,EAAE,EAAE;UAAEyB,KAAK,EAAE;QAAO,CAAE;QAAApB,QAAA,EAAC;MAE/E;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAACjD,EAAA,CApJID,MAAM;AAAAkE,GAAA,GAANlE,MAAM;AAqJZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAmE,GAAA;AAAAC,YAAA,CAAApE,EAAA;AAAAoE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}