{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { AppBar, Box, Container, Typography, Table, TableBody,  TableContainer, TableHead, TableRow, Paper, Button, Snackbar } from '@mui/material';\n// import { Alert } from '@mui/material';\n\n// export default function Cart({ cart, setCart }) {\n\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n//   const [snackbarMessage, setSnackbarMessage] = useState('');\n\n//   const handleRemoveFromCart = (stock) => {\n//     setCart(cart.filter((item) => item.ticker !== stock.ticker));\n//     setOpenSnackbar(true);\n//     setSnackbarMessage(`${stock.ticker} removed from cart.`); // Updated line\n//     console.log(StyledTableCell); // Should log the styled component\n\n//   };\n\n//   const handleSnackbarClose = () => {\n//     setOpenSnackbar(false);\n//   };\n\n//   useEffect(() => {\n//     // Optional: Simulate a delay for the snackbar message (2 seconds)\n//     const timeoutId = setTimeout(() => {\n//       setOpenSnackbar(false);\n//     }, 2000);\n\n//     return () => clearTimeout(timeoutId);\n//   }, [openSnackbar]);\n\n//   return (\n//     <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh', backgroundColor: 'background.default' }}>\n//       <AppBar position=\"static\" color=\"primary\">\n//         <Typography variant=\"h6\" component=\"h1\" sx={{ color: 'inherit', fontWeight: 'bold' }}>\n//           Your Cart\n//         </Typography>\n//       </AppBar>\n//       <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\n//         {cart.length > 0 ? (\n//           <TableContainer component={Paper} sx={{ mt: 4, backgroundColor: 'background.paper' }}>\n//             <Table sx={{ '& thead th': { backgroundColor: 'background.default', color: 'text.primary' } }}>\n//               <TableHead>\n//                 <TableRow>\n//                   <StyledTableCell>Ticker</StyledTableCell>\n//                   <StyledTableCell>Price</StyledTableCell>\n//                   <StyledTableCell>Change (%)</StyledTableCell>\n//                   <StyledTableCell>Action</StyledTableCell>\n//                 </TableRow>\n//               </TableHead>\n//               <TableBody>\n//                 {cart.map((stock, index) => (\n//                   <TableRow key={index}>\n//                     <StyledTableCell component=\"th\" scope=\"row\">\n//                       {stock.ticker}\n//                     </StyledTableCell>\n//                     <StyledTableCell>{stock.price}</StyledTableCell>\n//                     <StyledTableCell>{stock.change_percentage}</StyledTableCell>\n//                     <StyledTableCell>\n//                       <Button variant=\"contained\" color=\"error\" size=\"small\" onClick={() => handleRemoveFromCart(stock)}>\n//                         Remove\n//                       </Button>\n//                     </StyledTableCell>\n//                   </TableRow>\n//                 ))}\n//               </TableBody>\n//             </Table>\n//           </TableContainer>\n//         ) : (\n//           <Typography variant=\"h6\" component=\"h2\" sx={{ mt: 4, textAlign: 'center' }}>\n//             Your cart is currently empty.\n//           </Typography>\n//         )}\n//       </Container>\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={2000} // Optional: Set duration automatically (2 seconds)\n//         onClose={handleSnackbarClose}\n//       >\n//         <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n//           {snackbarMessage}\n//         </Alert>\n//       </Snackbar>\n//     </Box>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/USHA/OneDrive/Desktop/login-main/client/src/components/Cart.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { AppBar, Box, Container, Typography, Table, TableBody,  TableContainer, TableHead, TableRow, Paper, Button, Snackbar } from '@mui/material';\r\n// import { Alert } from '@mui/material';\r\n\r\n// export default function Cart({ cart, setCart }) {\r\n    \r\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\r\n//   const [snackbarMessage, setSnackbarMessage] = useState('');\r\n\r\n//   const handleRemoveFromCart = (stock) => {\r\n//     setCart(cart.filter((item) => item.ticker !== stock.ticker));\r\n//     setOpenSnackbar(true);\r\n//     setSnackbarMessage(`${stock.ticker} removed from cart.`); // Updated line\r\n//     console.log(StyledTableCell); // Should log the styled component\r\n\r\n//   };\r\n\r\n//   const handleSnackbarClose = () => {\r\n//     setOpenSnackbar(false);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // Optional: Simulate a delay for the snackbar message (2 seconds)\r\n//     const timeoutId = setTimeout(() => {\r\n//       setOpenSnackbar(false);\r\n//     }, 2000);\r\n\r\n//     return () => clearTimeout(timeoutId);\r\n//   }, [openSnackbar]);\r\n\r\n//   return (\r\n//     <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh', backgroundColor: 'background.default' }}>\r\n//       <AppBar position=\"static\" color=\"primary\">\r\n//         <Typography variant=\"h6\" component=\"h1\" sx={{ color: 'inherit', fontWeight: 'bold' }}>\r\n//           Your Cart\r\n//         </Typography>\r\n//       </AppBar>\r\n//       <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4 }}>\r\n//         {cart.length > 0 ? (\r\n//           <TableContainer component={Paper} sx={{ mt: 4, backgroundColor: 'background.paper' }}>\r\n//             <Table sx={{ '& thead th': { backgroundColor: 'background.default', color: 'text.primary' } }}>\r\n//               <TableHead>\r\n//                 <TableRow>\r\n//                   <StyledTableCell>Ticker</StyledTableCell>\r\n//                   <StyledTableCell>Price</StyledTableCell>\r\n//                   <StyledTableCell>Change (%)</StyledTableCell>\r\n//                   <StyledTableCell>Action</StyledTableCell>\r\n//                 </TableRow>\r\n//               </TableHead>\r\n//               <TableBody>\r\n//                 {cart.map((stock, index) => (\r\n//                   <TableRow key={index}>\r\n//                     <StyledTableCell component=\"th\" scope=\"row\">\r\n//                       {stock.ticker}\r\n//                     </StyledTableCell>\r\n//                     <StyledTableCell>{stock.price}</StyledTableCell>\r\n//                     <StyledTableCell>{stock.change_percentage}</StyledTableCell>\r\n//                     <StyledTableCell>\r\n//                       <Button variant=\"contained\" color=\"error\" size=\"small\" onClick={() => handleRemoveFromCart(stock)}>\r\n//                         Remove\r\n//                       </Button>\r\n//                     </StyledTableCell>\r\n//                   </TableRow>\r\n//                 ))}\r\n//               </TableBody>\r\n//             </Table>\r\n//           </TableContainer>\r\n//         ) : (\r\n//           <Typography variant=\"h6\" component=\"h2\" sx={{ mt: 4, textAlign: 'center' }}>\r\n//             Your cart is currently empty.\r\n//           </Typography>\r\n//         )}\r\n//       </Container>\r\n//       <Snackbar\r\n//         open={openSnackbar}\r\n//         autoHideDuration={2000} // Optional: Set duration automatically (2 seconds)\r\n//         onClose={handleSnackbarClose}\r\n//       >\r\n//         <Alert onClose={handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\r\n//           {snackbarMessage}\r\n//         </Alert>\r\n//       </Snackbar>\r\n//     </Box>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}